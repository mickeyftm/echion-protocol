// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeePercentChanged extends ethereum.Event {
  get params(): FeePercentChanged__Params {
    return new FeePercentChanged__Params(this);
  }
}

export class FeePercentChanged__Params {
  _event: FeePercentChanged;

  constructor(event: FeePercentChanged) {
    this._event = event;
  }

  get feePercent(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LotteryCancelled extends ethereum.Event {
  get params(): LotteryCancelled__Params {
    return new LotteryCancelled__Params(this);
  }
}

export class LotteryCancelled__Params {
  _event: LotteryCancelled;

  constructor(event: LotteryCancelled) {
    this._event = event;
  }

  get lotteryId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get paymentToCreator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LotteryClosed extends ethereum.Event {
  get params(): LotteryClosed__Params {
    return new LotteryClosed__Params(this);
  }
}

export class LotteryClosed__Params {
  _event: LotteryClosed;

  constructor(event: LotteryClosed) {
    this._event = event;
  }

  get lotteryId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentToCreator(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fees(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LotteryCreated extends ethereum.Event {
  get params(): LotteryCreated__Params {
    return new LotteryCreated__Params(this);
  }
}

export class LotteryCreated__Params {
  _event: LotteryCreated;

  constructor(event: LotteryCreated) {
    this._event = event;
  }

  get lotteryId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lotteryAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get nftIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get ticketPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get created(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get lotteryPoolType(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get minAmount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class LotteryStaked extends ethereum.Event {
  get params(): LotteryStaked__Params {
    return new LotteryStaked__Params(this);
  }
}

export class LotteryStaked__Params {
  _event: LotteryStaked;

  constructor(event: LotteryStaked) {
    this._event = event;
  }

  get lotteryId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinDaysOpenChanged extends ethereum.Event {
  get params(): MinDaysOpenChanged__Params {
    return new MinDaysOpenChanged__Params(this);
  }
}

export class MinDaysOpenChanged__Params {
  _event: MinDaysOpenChanged;

  constructor(event: MinDaysOpenChanged) {
    this._event = event;
  }

  get minDaysOpen(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WalletChanged extends ethereum.Event {
  get params(): WalletChanged__Params {
    return new WalletChanged__Params(this);
  }
}

export class WalletChanged__Params {
  _event: WalletChanged;

  constructor(event: WalletChanged) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LotteryPoolFactory extends ethereum.SmartContract {
  static bind(address: Address): LotteryPoolFactory {
    return new LotteryPoolFactory("LotteryPoolFactory", address);
  }

  getFeePercent(): BigInt {
    let result = super.call("getFeePercent", "getFeePercent():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getFeePercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFeePercent",
      "getFeePercent():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLotteryPoolStaking(): Address {
    let result = super.call(
      "getLotteryPoolStaking",
      "getLotteryPoolStaking():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getLotteryPoolStaking(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getLotteryPoolStaking",
      "getLotteryPoolStaking():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMinDaysOpen(): BigInt {
    let result = super.call("getMinDaysOpen", "getMinDaysOpen():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMinDaysOpen(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinDaysOpen",
      "getMinDaysOpen():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWallet(): Address {
    let result = super.call("getWallet", "getWallet():(address)", []);

    return result[0].toAddress();
  }

  try_getWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("getWallet", "getWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lotteries(param0: BigInt): Address {
    let result = super.call("lotteries", "lotteries(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_lotteries(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("lotteries", "lotteries(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  numberOfActiveLotteries(): BigInt {
    let result = super.call(
      "numberOfActiveLotteries",
      "numberOfActiveLotteries():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfActiveLotteries(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfActiveLotteries",
      "numberOfActiveLotteries():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalBalance(): BigInt {
    let result = super.call("totalBalance", "totalBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBalance", "totalBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _lotteryPoolStaking(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelLotteryCall extends ethereum.Call {
  get inputs(): CancelLotteryCall__Inputs {
    return new CancelLotteryCall__Inputs(this);
  }

  get outputs(): CancelLotteryCall__Outputs {
    return new CancelLotteryCall__Outputs(this);
  }
}

export class CancelLotteryCall__Inputs {
  _call: CancelLotteryCall;

  constructor(call: CancelLotteryCall) {
    this._call = call;
  }

  get _lotteryId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelLotteryCall__Outputs {
  _call: CancelLotteryCall;

  constructor(call: CancelLotteryCall) {
    this._call = call;
  }
}

export class CreateLotteryCall extends ethereum.Call {
  get inputs(): CreateLotteryCall__Inputs {
    return new CreateLotteryCall__Inputs(this);
  }

  get outputs(): CreateLotteryCall__Outputs {
    return new CreateLotteryCall__Outputs(this);
  }
}

export class CreateLotteryCall__Inputs {
  _call: CreateLotteryCall;

  constructor(call: CreateLotteryCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nftIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _ticketPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _lotteryPoolType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _minAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateLotteryCall__Outputs {
  _call: CreateLotteryCall;

  constructor(call: CreateLotteryCall) {
    this._call = call;
  }
}

export class DeclareWinnerCall extends ethereum.Call {
  get inputs(): DeclareWinnerCall__Inputs {
    return new DeclareWinnerCall__Inputs(this);
  }

  get outputs(): DeclareWinnerCall__Outputs {
    return new DeclareWinnerCall__Outputs(this);
  }
}

export class DeclareWinnerCall__Inputs {
  _call: DeclareWinnerCall;

  constructor(call: DeclareWinnerCall) {
    this._call = call;
  }

  get _lotteryId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeclareWinnerCall__Outputs {
  _call: DeclareWinnerCall;

  constructor(call: DeclareWinnerCall) {
    this._call = call;
  }
}

export class DecreaseTotalBalanceCall extends ethereum.Call {
  get inputs(): DecreaseTotalBalanceCall__Inputs {
    return new DecreaseTotalBalanceCall__Inputs(this);
  }

  get outputs(): DecreaseTotalBalanceCall__Outputs {
    return new DecreaseTotalBalanceCall__Outputs(this);
  }
}

export class DecreaseTotalBalanceCall__Inputs {
  _call: DecreaseTotalBalanceCall;

  constructor(call: DecreaseTotalBalanceCall) {
    this._call = call;
  }

  get _lotteryId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseTotalBalanceCall__Outputs {
  _call: DecreaseTotalBalanceCall;

  constructor(call: DecreaseTotalBalanceCall) {
    this._call = call;
  }
}

export class IncreaseTotalBalanceCall extends ethereum.Call {
  get inputs(): IncreaseTotalBalanceCall__Inputs {
    return new IncreaseTotalBalanceCall__Inputs(this);
  }

  get outputs(): IncreaseTotalBalanceCall__Outputs {
    return new IncreaseTotalBalanceCall__Outputs(this);
  }
}

export class IncreaseTotalBalanceCall__Inputs {
  _call: IncreaseTotalBalanceCall;

  constructor(call: IncreaseTotalBalanceCall) {
    this._call = call;
  }

  get _lotteryId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseTotalBalanceCall__Outputs {
  _call: IncreaseTotalBalanceCall;

  constructor(call: IncreaseTotalBalanceCall) {
    this._call = call;
  }
}

export class LaunchStakingCall extends ethereum.Call {
  get inputs(): LaunchStakingCall__Inputs {
    return new LaunchStakingCall__Inputs(this);
  }

  get outputs(): LaunchStakingCall__Outputs {
    return new LaunchStakingCall__Outputs(this);
  }
}

export class LaunchStakingCall__Inputs {
  _call: LaunchStakingCall;

  constructor(call: LaunchStakingCall) {
    this._call = call;
  }

  get _lotteryId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LaunchStakingCall__Outputs {
  _call: LaunchStakingCall;

  constructor(call: LaunchStakingCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeePercentCall extends ethereum.Call {
  get inputs(): SetFeePercentCall__Inputs {
    return new SetFeePercentCall__Inputs(this);
  }

  get outputs(): SetFeePercentCall__Outputs {
    return new SetFeePercentCall__Outputs(this);
  }
}

export class SetFeePercentCall__Inputs {
  _call: SetFeePercentCall;

  constructor(call: SetFeePercentCall) {
    this._call = call;
  }

  get _feePercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeePercentCall__Outputs {
  _call: SetFeePercentCall;

  constructor(call: SetFeePercentCall) {
    this._call = call;
  }
}

export class SetMinDaysOpenCall extends ethereum.Call {
  get inputs(): SetMinDaysOpenCall__Inputs {
    return new SetMinDaysOpenCall__Inputs(this);
  }

  get outputs(): SetMinDaysOpenCall__Outputs {
    return new SetMinDaysOpenCall__Outputs(this);
  }
}

export class SetMinDaysOpenCall__Inputs {
  _call: SetMinDaysOpenCall;

  constructor(call: SetMinDaysOpenCall) {
    this._call = call;
  }

  get _minDaysOpen(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinDaysOpenCall__Outputs {
  _call: SetMinDaysOpenCall;

  constructor(call: SetMinDaysOpenCall) {
    this._call = call;
  }
}

export class SetWalletCall extends ethereum.Call {
  get inputs(): SetWalletCall__Inputs {
    return new SetWalletCall__Inputs(this);
  }

  get outputs(): SetWalletCall__Outputs {
    return new SetWalletCall__Outputs(this);
  }
}

export class SetWalletCall__Inputs {
  _call: SetWalletCall;

  constructor(call: SetWalletCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWalletCall__Outputs {
  _call: SetWalletCall;

  constructor(call: SetWalletCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
